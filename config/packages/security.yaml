security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        # app_user_provider:
        #     entity:
        #         class: App\Entity\User
        #         property: email
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email  
        app_client_provider:  # Ajoutez ce fournisseur pour Client
            entity:
                class: App\Entity\Client
                property: email              
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # user_main:
        #     lazy: true
        #     provider: app_user_provider
        #     form_login:
        #         login_path: api_login_user
        #         check_path: api_login_user
        #         username_parameter: email
        #         password_parameter: password
        #     logout:
        #         path: api_logout_user
        # user_main:
        #     lazy: true
        #     provider: app_user_provider
        #     form_login:
        #         login_path: app_login  # Le chemin pour l'écran de connexion
        #         check_path: app_login  # Le chemin pour l'action de vérification du login
        #         username_parameter: email  # Le paramètre du nom d'utilisateur
        #         password_parameter: password  # Le paramètre du mot de passe
        #         enable_csrf: true  # Activer le CSRF
        #     logout:
        #         path: app_logout
        client_main:  # Ajoutez ce pare-feu pour Client
            lazy: true
             # Active les sessions PHP

            provider: app_client_provider
            form_login:
                login_path: api_login_client
                check_path: api_login_client
                username_parameter: email
                password_parameter: password
                enable_csrf: true
            logout:
                path: api_logout_client  
                      
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         #- { path: ^/admin, roles: ROLE_ADMIN }
         
        # - { path: ^/commercial, roles: ROLE_COMMERCIAL }
         # - { path: ^/technicien, roles: ROLE_TECHNICIAN }

         - { path: ^/api/signup, roles: PUBLIC_ACCESS }
        #  - { path: ^/user/dashboard, roles: ROLE_USER }
         - { path: ^/client, roles: ROLE_CLIENT }
         - { path: ^/api/login_client/, roles: ROLE_CLIENT }
         - { path: ^/api/singup_client/, roles: ROLE_CLIENT }
         - { path: ^/interventions, roles: [ROLE_CLIENT, ROLE_ADMIN] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
parameters:
    user_photos_directory: '%kernel.project_dir%/public/uploads/users'
    photos_directory: '%kernel.project_dir%/public/uploads/demandes'
    # client_photos_directory: '%kernel.project_dir%/public/uploads/clients'  

    app.base_url: 'http://localhost:8000'
